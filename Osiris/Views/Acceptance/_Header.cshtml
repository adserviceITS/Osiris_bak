@model Osiris.Models.AcceptanceModels

<div class="row">
    <div class="input-group col-md-3">
        <div class="input-group-prepend">
            <span class="input-group-text" style="color:white; background-color: #007bff; border-color: #007bff;">受付番号</span>
        </div>
        @Html.TextBoxFor(model => model.ReceptionNumber, null, new { @class = "form-control", style = "width:100px;", placeholder = "", @readonly = "readonly" })
        <div class="input-group-append">
            <button type="button" class="btn btn-outline-secondary" id="RcpNoCopyBtn">C</button>
        </div>
    </div>
    <div class="input-group col-md-3">
        <div class="input-group-prepend">
            <span class="input-group-text" style="color:white; background-color: #007bff; border-color: #007bff;">ステータス</span>
        </div>
        @Html.TextBoxFor(model => model.Status, null, new { @class = "form-control", style = "width:150px;", placeholder = "", @readonly = "readonly" })
    </div>
</div>
<div class="row" style="margin-top:10px;">
    <div class="input-group col-md-3">
        <table class="table table-bordered table-sm table-hover table-condensed">
            <tr>
                <td style="width:75px;">受付日</td>
                <td>@Model.ReceptionDate</td>
            </tr>
            <tr>
                <td>入荷日</td>
                <td>@Model.ArrivalDate</td>
            </tr>
            <tr>
                <td>出荷指定日</td>
                <td>@Model.ShipDesignDate</td>
            </tr>
            <tr>
                <td>出荷日</td>
                <td>@Model.ShipDate</td>
            </tr>
        </table>
    </div>
    <div class="input-group col-md-3">
        <table class="table table-bordered table-sm table-hover">
            <tr>
                <td style="width:75px;">商品名</td>
                <td>@Model.ProductName</td>
            </tr>
            <tr>
                <td>製品型番</td>
                <td>@Model.ModelName</td>
            </tr>
            <tr>
                <td>シリアル</td>
                <td>@Model.SerialNo</td>
            </tr>
        </table>
        <div class="row" style="width:100%; margin:15px 0 0 0;">
            <div class="btn-group-toggle" data-toggle="buttons">
                <label class="btn btn-yellow" style="width:100px;">
                    @Html.CheckBoxFor(model => model.CharterFlg, new { autocomplete = "off" })転送チャーター
                </label>
            </div>
            <div class="btn-group-toggle" data-toggle="buttons" style="width:98px;margin-left:5px;">
                <label class="btn btn-yellow" style="width:100px;">
                    @Html.CheckBoxFor(model => model.DeliveryFlg, new { autocomplete = "off" })転送宅配
                </label>
            </div>
        </div>
    </div>
    <div class="input-group col-md-3">
        <table class="table table-bordered table-sm table-hover">
            <tr>
                <td style="width:75px;">販路</td>
                <td>@Model.VendorName</td>
            </tr>
            <tr>
                <td>代理店</td>
                <td>@Model.DistributorName</td>
            </tr>
        </table>
        @{
            if (Model.ExistPhotoStudioDir) {
                <button type="button" id="PhotoStudioBtn" class="btn btn-light btn-block border-secondary" style="font-size:19px; color:red;">写真館</button>
            } else {
                <button type="button" id="PhotoStudioBtn" class="btn btn-light btn-block border-secondary" style="font-size:19px;">写真館</button>
            }
        }

    </div>
    <div class="input-group col-md-3">
        <div class="col-md-6">
            <div class="row">
                <div class="btn-group-toggle" data-toggle="buttons">
                    <label class="btn btn-yellow" style="width:100px;">
                        @Html.CheckBoxFor(model => model.AccidentFlg, new { autocomplete = "off" })品質事故
                    </label>
                </div>
            </div>
            <div class="row" style="margin-top:20px;">
                <div class="btn-group-toggle" data-toggle="buttons">
                    <label class="btn btn-yellow" style="width:100px;">
                        @Html.CheckBoxFor(model => model.ReRepairFlg, new { autocomplete = "off" })再修理
                    </label>
                </div>
            </div>
        </div>
        <div class="col-md-6" style="padding-right:unset;">
            @if (Model.Step == "1")
            {
                <button type="button" class="btn btn-warning btn-block" style="font-size:19px; height:72px;" id="CommonMemoBtn">共通メモ</button>
            }
        </div>
    </div>
</div>
<hr class="hr-acpt" style="margin-top:20px;" />
<!-- パンくず -->
<div style="text-align:center; margin-top:15px;">
    <div class="breadcrumb">
        @switch (Model.Step)
        {
            case "1":
                <p class="active">入荷/返却</p>
                <p href="#">製品情報</p>
                <p href="#">内容確認</p>
                break;
            case "2":
                <p href="#">入荷/返却</p>
                <p class="active">製品情報</p>
                <p href="#">内容確認</p>
                break;
            case "3":
                <p href="#">入荷/返却</p>
                <p href="#">製品情報</p>
                <p class="active">内容確認</p>
                break;
            default:
                <p href="#">入荷/返却</p>
                <p href="#">製品情報</p>
                <p href="#">内容確認</p>
                break;
        }
    </div>
</div>
@Html.HiddenFor(model => Model.EditPermitFlg)

<script type="text/javascript">

    // 受付番号のCボタン押下時
    $("#RcpNoCopyBtn").click(function () {
        $("#ReceptionNumber").select();
        document.execCommand('copy');
    })

    // 写真館ボタン押下時
    $("#PhotoStudioBtn").click(function () {
        $.ajax({
            url: '@Url.Action("CheckPhotoStudioDir", "Acceptance")',
            type: "POST",
            async: false,
            data: { prmReceptionNumber: $("#ReceptionNumber").val() }
        })
            // ajax正常終了時
            .done(function (data) {
                // 正常時
                switch (data["Result"]) {
                    case "Error":
                        Swal.fire({
                            title: "エラー",
                            text: "「写真館フォルダ」に設定されたフォルダが存在しません！",
                            icon: "error",
                        });
                        return false;
                        break;
                    case "NoN":
                        Swal.fire({
                            title: "確認",
                            text: "写真保管用フォルダを作成しますか？",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'OK'
                        })
                            .then(result => {
                                if (result.value) {
                                    $.ajax({
                                        url: '@Url.Action("CreatePhotoStudioDir", "Acceptance")',
                                        type: "POST",
                                        async: false,
                                        data: { prmReceptionNumber: $("#ReceptionNumber").val() }
                                    })
                                        // ajax正常終了時
                                        .done(function (data) {
                                            Swal.fire("作成完了", $("#ReceptionNumber").val() + " でフォルダを作成しました。", "success");
                                            // 写真館ボタンの文字を赤に変える
                                            $("#PhotoStudioBtn").css("color", "Red");
                                            PhotoStudioFolderOpen();
                                        })
                                        // ajaxエラー終了時
                                        .fail(function (xhr, status, error) {
                                            Swal.fire("ajax エラー", "Acceptance.CreatePhotoStudioDir\n" + error, "error");
                                            return false;
                                        });
                                } else {
                                    return false;
                                }
                            });
                        break;
                    case "Exist":
                        PhotoStudioFolderOpen();
                        break;
                    default:
                        Swal.fire("予期しないエラー", "PhotoStudioBtn.click\n" + error, "error");
                        break;
                }
            })
            // ajaxエラー終了時
            .fail(function (xhr, status, error) {
                Swal.fire("ajax エラー", "Acceptance.CheckPhotoStudioDir\n" + error, "error");
            });
    });

    var PhotoStudioFolderOpen = function () {
        $.ajax({
            url: '@Url.Action("PhotoStudioFolderOpen", "Acceptance")',
            type: "POST",
            data: { prmReceptionNumber: $("#ReceptionNumber").val() }
        })
            // ajaxエラー終了時
            .fail(function (xhr, status, error) {
                Swal.fire("ajax エラー", "Acceptance.PhotoStudioFolderOpen\n" + error, "error");
            });
    }

    // 最終処理で権限設定
    $(window).on('load', function () {
        // 編集不可だったら一旦全てのフィールドを無効化する
        var editPermitFlg = @Model.EditPermitFlg.ToString().ToLower();

        if (!editPermitFlg) {
            disabledForm($("#EntryForm1, #EntryForm2, #EntryForm3"));
            // 動かしてもいいやつを有効化する
            $("#ReceptionNumber, #RcpNoCopyBtn").prop('disabled', false);       // Header
            $("#NextToStep2Btn").prop('disabled', false);                       // Step1
            $("#NextToStep3Btn, #BackToStep1Btn").prop('disabled', false);      // Step2

        }
    });

</script>
